{"version":3,"sources":["api.ts","router/atoms.ts","router/Coins.tsx","router/Chart.tsx","router/Price.tsx","router/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","res","json","fetchPrice","coinId","isDarkAtom","atom","key","default","Coins","Container","styled","div","Header","header","Loader","h1","props","theme","accentColor","Title","CoinsList","ul","Coin","li","bgColor","pointColor","Img","img","Btn","button","Cover","useQuery","isLoading","data","setDarkAtom","useSetRecoilState","isDark","useRecoilValue","Helmet","onClick","current","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Chart","endDate","Math","floor","Date","now","startDate","fetchChart","refetchInterval","type","series","price","x","time_close","y","open","high","low","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","categories","fill","gradient","gradientToColors","stops","colors","tooltip","formatter","value","toFixed","Price","quotes","USD","percent_change_1h","percent_change_12h","percent_change_24h","Overview","OverviewItem","Description","p","Tabs","Tab","span","isActive","textColor","Back","useLocation","useParams","priceMatch","useRouteMatch","chartMatch","fetchInfo","infoLoading","infoData","priceLoading","priceData","loading","rank","description","total_supply","max_supply","path","Router","lightTheme","darkTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.ed9c4f44.chunk.js","sourcesContent":["const BASE_URL = 'https://api.coinpaprika.com/v1';\n\nexport function fetchCoins(){\n    return fetch(`${BASE_URL}/coins`).then((res) => res.json());\n}\n\nexport function fetchInfo(coinId: string){\n    return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json());\n}\n\nexport function fetchPrice(coinId: string){\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json());\n}\n\nexport function fetchChart(coinId: string){\n    const endDate = Math.floor(Date.now() / 1000); //ms로 줌 1ms = 0.0001s s>ms\n    const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((res)=> res.json());\n}","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n    key: \"isDark\",\n    default: false,\n});","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { isDarkAtom } from \"./atoms\";\n\nfunction Coins(){\n\n  const Container = styled.div`\n    padding: 0px 20px;\n    max-width: 480px;\n    margin: 0 auto;\n  `;\n\n  const Header = styled.header`\n    margin-top: 5vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `;\n\n  const Loader = styled.h1`\n    color: ${(props)=> props.theme.accentColor};`\n  ;\n\n  const Title = styled.h1`\n    font-size: 80px;\n    color: ${(props) => props.theme.accentColor};\n  `;\n\n  const CoinsList = styled.ul`\n  `;\n\n  const Coin = styled.li`\n    font-size: 25px;\n    font-weight: 400;\n    color: ${(props) => props.theme.bgColor};\n    border-radius: 15px;\n    margin-bottom: 10px;\n\n    a {\n      padding: 15px;\n      border-radius: 20px;\n      transition: color 0.2s ease-in;\n      display: flex;\n      align-items: center;\n      background-color: ${(props) => props.theme.pointColor};\n      \n    }\n    &:hover {\n      a {\n        color: ${(props) => props.theme.accentColor};\n      }\n    }\n  `;\n\n  const Img = styled.img`\n      background-color: ${(props)=> props.theme.pointColor};\n      width: 35px;\n      margin-right: 15px;\n  `;\n\n  const Btn = styled.button`\n      border: none;\n      padding: 3px;\n      border-radius: 5px;\n      font-weight: 600;\n      background-color: ${(props)=> props.theme.accentColor};\n  `;\n\n  const Cover = styled.div`\n      margin: 30px auto 0 auto;\n      max-width: 500px;\n      text-align: right;\n  `;\n\n  interface ICoin {\n    id: string;\n    name: string;\n    symbol: string;\n  };\n\n  const {isLoading, data} = useQuery<ICoin[]>(\"allCoins\",fetchCoins);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const onClick = () => {setDarkAtom(current => !current);};\n  const isDark = useRecoilValue(isDarkAtom);\n  return(\n    <Container>\n      <Helmet>\n      <title>\n        Coins\n      </title>\n    </Helmet>\n    <Cover>\n      <Btn onClick={onClick}>{isDark ? \"LightMode\" : \"DarkMode\"}</Btn>\n    </Cover>\n    \n      <Header>\n        <Title>\n          Coins\n        </Title>\n      </Header>\n      { isLoading ? <Loader>loading...</Loader> : <CoinsList>{data?.slice(0,100).map( coin => (<Coin key={coin.id}><Link to={{\n        pathname: `/${coin.id}`,\n        state: {name: coin.name}\n        }}><Img src ={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}></Img>{coin.name} &rarr;</Link></Coin>))}</CoinsList>}\n    </Container>\n  )\n}; \n  \nexport default Coins;","import ApexChart from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { useRecoilValue } from \"recoil\";\nimport { fetchChart } from \"../api\";\nimport { isDarkAtom } from \"./atoms\";\n\ninterface IChart{\n  coinId: string;\n};\n\ninterface IData{\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n};\n\nfunction Chart({coinId}:IChart){\n  const {isLoading, data} = useQuery<IData[]>(\"ohlcv\", ()=>fetchChart(coinId), {refetchInterval: 10000});\n  const isDark = useRecoilValue(isDarkAtom);\n  return(\n    <div>\n      {isLoading ? (\"loading...\") : (<ApexChart \n      type=\"candlestick\"\n      // series={[\n        // {\n        //   data: [\n        //     {\n        //       x: data?.map(price => price.time_open),\n        //       y: data?.map(price => (price.open, price.high, price.low, price.close))\n        //     }\n        // ]\n      //   },\n      // ]}\n      series={[\n        {\n          name: \"Price\",\n          data: data?.map((price) => ({\n            x: price.time_close,\n            y: [price.open, price.high, price.low, price.close],\n          })),\n        },\n      ]}\n\n      options={{\n        theme:{\n          mode: isDark ? \"dark\" : \"light\",\n        },\n\n        chart: {\n          height: 500,\n          width: 500,\n          toolbar: {\n            show: false,\n          },\n          background: \"transparent\",\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4,\n        },\n        yaxis: {\n          show: false,\n        },\n        xaxis:{\n          // axisBorder: { show: false },\n          // axisTicks: { show: false },\n          // // labels: { show: false },\n          type: \"datetime\",\n          categories: data?.map((price) => price.time_close),\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: { gradientToColors: [\"#9ee6ff\"], stops: [0, 100]},\n        },\n        colors: [\"#55c1e8\"],\n        tooltip: {\n          y: {\n            formatter: (value) => `$${value.toFixed(2)}`,\n          },\n        }\n      }}\n        />\n      )\n    }\n    </div>\n  );\n}\n\nexport default Chart;","import { useQuery } from \"react-query\";\nimport { fetchPrice } from \"../api\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\ninterface IChart{\n  coinId: string;\n};\n\ninterface IPrice{\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Price({coinId}:IChart){\n  const {isLoading, data} = useQuery<IPrice>(\"price\",()=>fetchPrice(coinId));\n  return(\n    <>\n      {isLoading ? \"Loading...\" : <Container>\n        <p><strong>Price:</strong> ${data?.quotes.USD.price.toFixed(3)}</p>\n        <p><strong>Change rate (last 1 hours):</strong> {data?.quotes.USD.percent_change_1h}%</p>\n        <p><strong>Change rate (last 12 hours):</strong> {data?.quotes.USD.percent_change_12h}%</p>\n        <p><strong>Change rate (last 24 hours):</strong> {data?.quotes.USD.percent_change_24h}%</p>\n        </Container>}\n    </>\n  );\n}\n\nexport default Price;","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { useRouteMatch, Link, Switch, Route, useLocation, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchInfo, fetchPrice } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  margin-top: 5vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Loader = styled.h1`\n  color: ${(props)=> props.theme.accentColor};`\n;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  color: ${(props)=> props.theme.accentColor};\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.pointColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${(props) => props.theme.pointColor};\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n    background-color: ${(props) => props.theme.pointColor};\n  }\n  span:last-child {\n    background-color: ${(props) => props.theme.pointColor};\n    color: ${(props) => props.theme.accentColor};\n  }\n`;\n\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props)=> props.theme.accentColor};\n  margin-top: 1vh;\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n    background-color: ${(props)=> props.theme.accentColor};\n  }\n`;\n\nconst Back = styled.button`\n  font-size: 35px;\n  border: none;\n`;\n\ninterface ParamsInterface{\n  coinId: string;\n}\n\ninterface StateInterface{\n  name: string;\n}\n\ninterface IInfo{\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  contract: string;\n  platform: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface IPrice{\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin(){\n  const { state } = useLocation<StateInterface>(); //이전 url에서 state받아옴\n  const { coinId } = useParams<ParamsInterface>(); //현재 url의 '/~~' 정보 (여기에선 coinID)\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n  const {isLoading: infoLoading, data: infoData } = useQuery<IInfo>([\"info\", coinId], () => fetchInfo(coinId));\n  const {isLoading: priceLoading, data: priceData } = useQuery<IPrice>([\"price\",coinId], () => fetchPrice(coinId), {refetchInterval: 5000});\n  //이름 겹치지 않게 다시 설정, 어차피 query-key는 배열에 담겨서 배열로 선언하고, 이름 겹치지 않게 key2개 넣은 것, 인자 넘겨야 돼서 익명함수로 호출\n  const loading = infoLoading || priceLoading;\n\nreturn (\n  <Container>\n    <Helmet>\n      <title>\n        {coinId}\n      </title>\n    </Helmet>\n    <Back><Link to=\"/\">←</Link></Back>\n    <Header>\n      <Title>\n        {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n      </Title>\n    </Header>\n    {loading ? (\n      <Loader>Loading...</Loader>\n    ) : (\n      <>\n        <Overview>\n          <OverviewItem>\n            <span>Rank:</span>\n            <span>{infoData?.rank}</span>\n          </OverviewItem>\n          <OverviewItem>\n            <span>Symbol:</span>\n            <span>${infoData?.symbol}</span>\n          </OverviewItem>\n          <OverviewItem>\n            <span>Price:</span>\n            <span>${priceData?.quotes.USD.price.toFixed(3)}</span>\n          </OverviewItem>\n        </Overview>\n        <Description>{infoData?.description}</Description>\n        <Overview>\n          <OverviewItem>\n            <span>Total Suply:</span>\n            <span>{priceData?.total_supply}</span>\n          </OverviewItem>\n          <OverviewItem>\n            <span>Max Supply:</span>\n            <span>{priceData?.max_supply}</span>\n          </OverviewItem>\n        </Overview>\n\n        <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n        <Switch>\n          <Route path={\"/:coinId/price\"}>\n            <Price coinId={coinId}/>\n          </Route>\n          <Route path={\"/:coinId/chart\"}>\n            <Chart coinId={coinId}/>\n          </Route>\n        </Switch>\n      </>\n    )}\n  </Container>\n  );\n}\n\nexport default Coin;","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coins from \"./router/Coins\";\nimport Coin  from \"./router/Coin\";\n\nfunction Router(){\n  return(\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin/>\n        </Route>\n        <Route path=\"/\">\n          <Coins/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  textColor: \"#1d936e\",\n  bgColor: \"#ffaad4\",\n  accentColor: \"#f2e6a2\",\n  pointColor: \"#55c1e8\"\n};\n\nexport const darkTheme: DefaultTheme = {\n  textColor: \"#e5e5e5\",\n  bgColor: \"#3d3f3f\",\n  accentColor: \"#a5a5a5\",\n  pointColor: \"#24292b\"\n};","import { createGlobalStyle } from \"styled-components\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport Router from \"./Router\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./router/atoms\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\"\n\nconst GlobalStyle = createGlobalStyle`\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap\" rel=\"stylesheet\">\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  *{\n    box-sizing: border-box;\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props)=> props.theme.textColor};\n  }\n  body{\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n  a{\n    text-decoration: none;\n  }\n\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={ isDark ? darkTheme : lightTheme }>\n        <GlobalStyle/>\n        <Router/>\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n    //fragment 고스트 컴포넌트. div같은 불필요한 태그 없이 두개를 동시에 return할 수 있다\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App/>\n      </QueryClientProvider>\n    </RecoilRoot>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}